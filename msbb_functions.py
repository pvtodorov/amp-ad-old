import pandas as pd
import uuid
import os
from collections import defaultdict


def recursivedict():
    """ Creates a dict of dicts as deep as needed.
    """
    return defaultdict(recursivedict)


def check_or_create_dir(path):
    """ Check if a folder exists. If it doesn't create it.
    """
    if not os.path.exists(path):
        os.makedirs(path)


def save_predictions(predictions, folder):
    """ Save the predictions generated by gen_bcg_predictions and
    gen_background_predictions."""
    for subset in predictions:
        df = pd.DataFrame(predictions[subset])
        df = df.transpose().reset_index().rename(columns={'index': 'ID'})
        outfile = str(uuid.uuid4())
        outfolder = folder + '/' + subset
        check_or_create_dir(outfolder)
        df.to_csv(outfolder + '/' + outfile + '.csv', index=False)


def save_oob_scores(oob_scores, folder):
    """ Given a dict of oob_scores and a folder path, dump a csv of the
    oob_scores into the folder """
    d = oob_scores
    scores = pd.DataFrame(list(d.items()), columns=['n_features', 'R2'])
    scores = scores.sort_values('n_features').reset_index(drop=True)
    outfile = str(uuid.uuid4())
    scores.to_csv(folder + '/' + outfile + '.csv', index=False)
